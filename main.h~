#ifndef PARSHELL_MAIN_H
#define PARSHELL_MAIN_H

#include <stdbool.h>
#define MAXPAR 8

/* can_fork: semaph*/
extern sem_t can_fork;
extern sem_t can_wait;

/* The following is an atomic API with setters and getters
 * for the static global variables defined in main.c.
 * Mutual exclusion is guaranteed.
 */

/*increments total forked children*/
void atomic_inc_children_count(void);

/*increments total waited on children*/
void atomic_inc_waited_children(void);

/*checks whether exit was called*/
bool atomic_get_exit_called(void); 

/*new node into list containing info about all children*/
void atomic_insert_new_process(int pid, time_t starttime);

/*update endtime of terminated child with pid 'pid' */
void atomic_update_terminated_process(int pid, time_t endtime); 

#endif

